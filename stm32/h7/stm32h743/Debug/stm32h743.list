
stm32h743.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000298  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001f8  08000298  08000298  00001298  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000490  08000498  00001498  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .init_array   00000004  08000490  08000490  00001490  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .fini_array   00000004  08000494  08000494  00001494  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .data         00000000  24000000  24000000  00001498  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          0000001c  24000000  08000498  00002000  2**2
                  ALLOC
  7 ._user_heap_stack 00000604  2400001c  08000498  0000201c  2**0
                  ALLOC
  8 .ARM.attributes 0000002e  00000000  00000000  00001498  2**0
                  CONTENTS, READONLY
  9 .debug_info   00000c3c  00000000  00000000  000014c6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev 00000178  00000000  00000000  00002102  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_aranges 00000068  00000000  00000000  00002280  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_rnglists 00000040  00000000  00000000  000022e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_macro  00027fa1  00000000  00000000  00002328  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_line   00000aee  00000000  00000000  0002a2c9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_str    000e60bb  00000000  00000000  0002adb7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .comment      00000043  00000000  00000000  00110e72  2**0
                  CONTENTS, READONLY
 17 .debug_frame  00000090  00000000  00000000  00110eb8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line_str 00000047  00000000  00000000  00110f48  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000298 <__do_global_dtors_aux>:
 8000298:	b510      	push	{r4, lr}
 800029a:	4c05      	ldr	r4, [pc, #20]	@ (80002b0 <__do_global_dtors_aux+0x18>)
 800029c:	7823      	ldrb	r3, [r4, #0]
 800029e:	b933      	cbnz	r3, 80002ae <__do_global_dtors_aux+0x16>
 80002a0:	4b04      	ldr	r3, [pc, #16]	@ (80002b4 <__do_global_dtors_aux+0x1c>)
 80002a2:	b113      	cbz	r3, 80002aa <__do_global_dtors_aux+0x12>
 80002a4:	4804      	ldr	r0, [pc, #16]	@ (80002b8 <__do_global_dtors_aux+0x20>)
 80002a6:	f3af 8000 	nop.w
 80002aa:	2301      	movs	r3, #1
 80002ac:	7023      	strb	r3, [r4, #0]
 80002ae:	bd10      	pop	{r4, pc}
 80002b0:	24000000 	.word	0x24000000
 80002b4:	00000000 	.word	0x00000000
 80002b8:	08000478 	.word	0x08000478

080002bc <frame_dummy>:
 80002bc:	b508      	push	{r3, lr}
 80002be:	4b03      	ldr	r3, [pc, #12]	@ (80002cc <frame_dummy+0x10>)
 80002c0:	b11b      	cbz	r3, 80002ca <frame_dummy+0xe>
 80002c2:	4903      	ldr	r1, [pc, #12]	@ (80002d0 <frame_dummy+0x14>)
 80002c4:	4803      	ldr	r0, [pc, #12]	@ (80002d4 <frame_dummy+0x18>)
 80002c6:	f3af 8000 	nop.w
 80002ca:	bd08      	pop	{r3, pc}
 80002cc:	00000000 	.word	0x00000000
 80002d0:	24000004 	.word	0x24000004
 80002d4:	08000478 	.word	0x08000478

080002d8 <main>:
#include "rcc.h"
#include "stm32h7xx.h"


int main(void)
{
 80002d8:	b580      	push	{r7, lr}
 80002da:	af00      	add	r7, sp, #0
	init_rcc();
 80002dc:	f000 f802 	bl	80002e4 <init_rcc>
	while(1);
 80002e0:	bf00      	nop
 80002e2:	e7fd      	b.n	80002e0 <main+0x8>

080002e4 <init_rcc>:
#include "stm32h7xx.h"


void init_rcc(void)
{
 80002e4:	b480      	push	{r7}
 80002e6:	b083      	sub	sp, #12
 80002e8:	af00      	add	r7, sp, #0
	SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));
 80002ea:	4b33      	ldr	r3, [pc, #204]	@ (80003b8 <init_rcc+0xd4>)
 80002ec:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80002f0:	4a31      	ldr	r2, [pc, #196]	@ (80003b8 <init_rcc+0xd4>)
 80002f2:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 80002f6:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
	PWR->D3CR |= (3<<14);
 80002fa:	4b30      	ldr	r3, [pc, #192]	@ (80003bc <init_rcc+0xd8>)
 80002fc:	699b      	ldr	r3, [r3, #24]
 80002fe:	4a2f      	ldr	r2, [pc, #188]	@ (80003bc <init_rcc+0xd8>)
 8000300:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8000304:	6193      	str	r3, [r2, #24]
	FLASH->KEYR1 = 0x45670123;
 8000306:	4b2e      	ldr	r3, [pc, #184]	@ (80003c0 <init_rcc+0xdc>)
 8000308:	4a2e      	ldr	r2, [pc, #184]	@ (80003c4 <init_rcc+0xe0>)
 800030a:	605a      	str	r2, [r3, #4]
	FLASH->KEYR1 = 0xCDEF89AB;
 800030c:	4b2c      	ldr	r3, [pc, #176]	@ (80003c0 <init_rcc+0xdc>)
 800030e:	4a2e      	ldr	r2, [pc, #184]	@ (80003c8 <init_rcc+0xe4>)
 8000310:	605a      	str	r2, [r3, #4]
	FLASH->ACR = 0x1f;
 8000312:	4b2b      	ldr	r3, [pc, #172]	@ (80003c0 <init_rcc+0xdc>)
 8000314:	221f      	movs	r2, #31
 8000316:	601a      	str	r2, [r3, #0]


	RCC->PLLCFGR = 0x1FF0888;
 8000318:	4b2c      	ldr	r3, [pc, #176]	@ (80003cc <init_rcc+0xe8>)
 800031a:	4a2d      	ldr	r2, [pc, #180]	@ (80003d0 <init_rcc+0xec>)
 800031c:	62da      	str	r2, [r3, #44]	@ 0x2c
	RCC->PLLCKSELR = 0x505052;
 800031e:	4b2b      	ldr	r3, [pc, #172]	@ (80003cc <init_rcc+0xe8>)
 8000320:	4a2c      	ldr	r2, [pc, #176]	@ (80003d4 <init_rcc+0xf0>)
 8000322:	629a      	str	r2, [r3, #40]	@ 0x28
	RCC->PLL1DIVR = (1<<24)|(3<<16)|(1<<9)|(159);
 8000324:	4b29      	ldr	r3, [pc, #164]	@ (80003cc <init_rcc+0xe8>)
 8000326:	4a2c      	ldr	r2, [pc, #176]	@ (80003d8 <init_rcc+0xf4>)
 8000328:	631a      	str	r2, [r3, #48]	@ 0x30
	RCC->PLL2DIVR = (1<<24)|(3<<16)|(1<<9)|(159);
 800032a:	4b28      	ldr	r3, [pc, #160]	@ (80003cc <init_rcc+0xe8>)
 800032c:	4a2a      	ldr	r2, [pc, #168]	@ (80003d8 <init_rcc+0xf4>)
 800032e:	639a      	str	r2, [r3, #56]	@ 0x38
	RCC->PLL3DIVR = (1<<24)|(3<<16)|(1<<9)|(159);
 8000330:	4b26      	ldr	r3, [pc, #152]	@ (80003cc <init_rcc+0xe8>)
 8000332:	4a29      	ldr	r2, [pc, #164]	@ (80003d8 <init_rcc+0xf4>)
 8000334:	641a      	str	r2, [r3, #64]	@ 0x40
	RCC->D1CFGR = (0b100<<4)|(0b1000);
 8000336:	4b25      	ldr	r3, [pc, #148]	@ (80003cc <init_rcc+0xe8>)
 8000338:	2248      	movs	r2, #72	@ 0x48
 800033a:	619a      	str	r2, [r3, #24]
	RCC->D2CFGR = (0b100<<8)|(0b100<<4);
 800033c:	4b23      	ldr	r3, [pc, #140]	@ (80003cc <init_rcc+0xe8>)
 800033e:	f44f 6288 	mov.w	r2, #1088	@ 0x440
 8000342:	61da      	str	r2, [r3, #28]
	RCC->D3CFGR = (0b100<<4);
 8000344:	4b21      	ldr	r3, [pc, #132]	@ (80003cc <init_rcc+0xe8>)
 8000346:	2240      	movs	r2, #64	@ 0x40
 8000348:	621a      	str	r2, [r3, #32]

	RCC->CR |= (1<<16);
 800034a:	4b20      	ldr	r3, [pc, #128]	@ (80003cc <init_rcc+0xe8>)
 800034c:	681b      	ldr	r3, [r3, #0]
 800034e:	4a1f      	ldr	r2, [pc, #124]	@ (80003cc <init_rcc+0xe8>)
 8000350:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8000354:	6013      	str	r3, [r2, #0]
	while(!(RCC->CR & (1<<17)));
 8000356:	bf00      	nop
 8000358:	4b1c      	ldr	r3, [pc, #112]	@ (80003cc <init_rcc+0xe8>)
 800035a:	681b      	ldr	r3, [r3, #0]
 800035c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8000360:	2b00      	cmp	r3, #0
 8000362:	d0f9      	beq.n	8000358 <init_rcc+0x74>

	RCC->CR |= (1<<24);
 8000364:	4b19      	ldr	r3, [pc, #100]	@ (80003cc <init_rcc+0xe8>)
 8000366:	681b      	ldr	r3, [r3, #0]
 8000368:	4a18      	ldr	r2, [pc, #96]	@ (80003cc <init_rcc+0xe8>)
 800036a:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 800036e:	6013      	str	r3, [r2, #0]
	while(!(RCC->CR & (1<<25)));
 8000370:	bf00      	nop
 8000372:	4b16      	ldr	r3, [pc, #88]	@ (80003cc <init_rcc+0xe8>)
 8000374:	681b      	ldr	r3, [r3, #0]
 8000376:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800037a:	2b00      	cmp	r3, #0
 800037c:	d0f9      	beq.n	8000372 <init_rcc+0x8e>

	unsigned int tmp = RCC->CFGR;
 800037e:	4b13      	ldr	r3, [pc, #76]	@ (80003cc <init_rcc+0xe8>)
 8000380:	691b      	ldr	r3, [r3, #16]
 8000382:	607b      	str	r3, [r7, #4]
	tmp &= ~(0b111);
 8000384:	687b      	ldr	r3, [r7, #4]
 8000386:	f023 0307 	bic.w	r3, r3, #7
 800038a:	607b      	str	r3, [r7, #4]
	tmp |= 3;
 800038c:	687b      	ldr	r3, [r7, #4]
 800038e:	f043 0303 	orr.w	r3, r3, #3
 8000392:	607b      	str	r3, [r7, #4]
	RCC->CFGR = tmp;
 8000394:	4a0d      	ldr	r2, [pc, #52]	@ (80003cc <init_rcc+0xe8>)
 8000396:	687b      	ldr	r3, [r7, #4]
 8000398:	6113      	str	r3, [r2, #16]

	while((0b11<<3) != (RCC->CFGR & (0b111<<3)));
 800039a:	bf00      	nop
 800039c:	4b0b      	ldr	r3, [pc, #44]	@ (80003cc <init_rcc+0xe8>)
 800039e:	691b      	ldr	r3, [r3, #16]
 80003a0:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 80003a4:	2b18      	cmp	r3, #24
 80003a6:	d1f9      	bne.n	800039c <init_rcc+0xb8>

}
 80003a8:	bf00      	nop
 80003aa:	bf00      	nop
 80003ac:	370c      	adds	r7, #12
 80003ae:	46bd      	mov	sp, r7
 80003b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003b4:	4770      	bx	lr
 80003b6:	bf00      	nop
 80003b8:	e000ed00 	.word	0xe000ed00
 80003bc:	58024800 	.word	0x58024800
 80003c0:	52002000 	.word	0x52002000
 80003c4:	45670123 	.word	0x45670123
 80003c8:	cdef89ab 	.word	0xcdef89ab
 80003cc:	58024400 	.word	0x58024400
 80003d0:	01ff0888 	.word	0x01ff0888
 80003d4:	00505052 	.word	0x00505052
 80003d8:	0103029f 	.word	0x0103029f

080003dc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80003dc:	480d      	ldr	r0, [pc, #52]	@ (8000414 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80003de:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80003e0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80003e4:	480c      	ldr	r0, [pc, #48]	@ (8000418 <LoopForever+0x6>)
  ldr r1, =_edata
 80003e6:	490d      	ldr	r1, [pc, #52]	@ (800041c <LoopForever+0xa>)
  ldr r2, =_sidata
 80003e8:	4a0d      	ldr	r2, [pc, #52]	@ (8000420 <LoopForever+0xe>)
  movs r3, #0
 80003ea:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80003ec:	e002      	b.n	80003f4 <LoopCopyDataInit>

080003ee <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80003ee:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80003f0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80003f2:	3304      	adds	r3, #4

080003f4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80003f4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80003f6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80003f8:	d3f9      	bcc.n	80003ee <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80003fa:	4a0a      	ldr	r2, [pc, #40]	@ (8000424 <LoopForever+0x12>)
  ldr r4, =_ebss
 80003fc:	4c0a      	ldr	r4, [pc, #40]	@ (8000428 <LoopForever+0x16>)
  movs r3, #0
 80003fe:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000400:	e001      	b.n	8000406 <LoopFillZerobss>

08000402 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000402:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000404:	3204      	adds	r2, #4

08000406 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000406:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000408:	d3fb      	bcc.n	8000402 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800040a:	f000 f811 	bl	8000430 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800040e:	f7ff ff63 	bl	80002d8 <main>

08000412 <LoopForever>:

LoopForever:
  b LoopForever
 8000412:	e7fe      	b.n	8000412 <LoopForever>
  ldr   r0, =_estack
 8000414:	24080000 	.word	0x24080000
  ldr r0, =_sdata
 8000418:	24000000 	.word	0x24000000
  ldr r1, =_edata
 800041c:	24000000 	.word	0x24000000
  ldr r2, =_sidata
 8000420:	08000498 	.word	0x08000498
  ldr r2, =_sbss
 8000424:	24000000 	.word	0x24000000
  ldr r4, =_ebss
 8000428:	2400001c 	.word	0x2400001c

0800042c <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800042c:	e7fe      	b.n	800042c <ADC1_2_IRQHandler>
	...

08000430 <__libc_init_array>:
 8000430:	b570      	push	{r4, r5, r6, lr}
 8000432:	4d0d      	ldr	r5, [pc, #52]	@ (8000468 <__libc_init_array+0x38>)
 8000434:	4c0d      	ldr	r4, [pc, #52]	@ (800046c <__libc_init_array+0x3c>)
 8000436:	1b64      	subs	r4, r4, r5
 8000438:	10a4      	asrs	r4, r4, #2
 800043a:	2600      	movs	r6, #0
 800043c:	42a6      	cmp	r6, r4
 800043e:	d109      	bne.n	8000454 <__libc_init_array+0x24>
 8000440:	4d0b      	ldr	r5, [pc, #44]	@ (8000470 <__libc_init_array+0x40>)
 8000442:	4c0c      	ldr	r4, [pc, #48]	@ (8000474 <__libc_init_array+0x44>)
 8000444:	f000 f818 	bl	8000478 <_init>
 8000448:	1b64      	subs	r4, r4, r5
 800044a:	10a4      	asrs	r4, r4, #2
 800044c:	2600      	movs	r6, #0
 800044e:	42a6      	cmp	r6, r4
 8000450:	d105      	bne.n	800045e <__libc_init_array+0x2e>
 8000452:	bd70      	pop	{r4, r5, r6, pc}
 8000454:	f855 3b04 	ldr.w	r3, [r5], #4
 8000458:	4798      	blx	r3
 800045a:	3601      	adds	r6, #1
 800045c:	e7ee      	b.n	800043c <__libc_init_array+0xc>
 800045e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000462:	4798      	blx	r3
 8000464:	3601      	adds	r6, #1
 8000466:	e7f2      	b.n	800044e <__libc_init_array+0x1e>
 8000468:	08000490 	.word	0x08000490
 800046c:	08000490 	.word	0x08000490
 8000470:	08000490 	.word	0x08000490
 8000474:	08000494 	.word	0x08000494

08000478 <_init>:
 8000478:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800047a:	bf00      	nop
 800047c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800047e:	bc08      	pop	{r3}
 8000480:	469e      	mov	lr, r3
 8000482:	4770      	bx	lr

08000484 <_fini>:
 8000484:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000486:	bf00      	nop
 8000488:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800048a:	bc08      	pop	{r3}
 800048c:	469e      	mov	lr, r3
 800048e:	4770      	bx	lr
